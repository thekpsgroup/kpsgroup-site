---
import BaseLayout from '../layouts/BaseLayout.astro';
import UserManagementComponent from '../components/UserManagement.astro';
---

<BaseLayout title="User Management - KPS Group CRM">
  <div class="min-h-screen bg-gray-50">
    <!-- Header -->
    <header class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">User Management</h1>
            <p class="mt-2 text-sm text-gray-600">
              Manage CRM users, roles, and permissions
            </p>
          </div>
          <div class="flex items-center space-x-4">
            <a 
              href="/crm" 
              class="text-blue-600 hover:text-blue-800 font-medium"
            >
              ‚Üê Back to CRM
            </a>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Stats Overview -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-blue-500 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-500">Total Users</p>
              <p id="total-users" class="text-2xl font-semibold text-gray-900">-</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-green-500 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-500">Active Users</p>
              <p id="active-users" class="text-2xl font-semibold text-gray-900">-</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-purple-500 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-500">Admins</p>
              <p id="admin-users" class="text-2xl font-semibold text-gray-900">-</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-yellow-500 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-500">Recent Logins</p>
              <p id="recent-logins" class="text-2xl font-semibold text-gray-900">-</p>
            </div>
          </div>
        </div>
      </div>

      <!-- User Management Component -->
      <UserManagementComponent 
        enableUserCreation={true}
        enableUserEdit={true}
        enableUserDeactivation={true}
      />
    </main>
  </div>

  <script>
    // Load user statistics
    async function loadUserStats() {
      try {
        const response = await fetch('/api/users?include_inactive=true');
        const data = await response.json();

        if (data.success) {
          const users = data.users as any[];
          const totalUsers = users.length;
          const activeUsers = users.filter((u: any) => u.is_active).length;
          const adminUsers = users.filter((u: any) => u.role === 'admin').length;
          
          // Calculate recent logins (last 7 days)
          const sevenDaysAgo = new Date();
          sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);
          const recentLogins = users.filter((u: any) => 
            u.last_login && new Date(u.last_login) > sevenDaysAgo
          ).length;

          // Update stats with null checks
          const totalEl = document.getElementById('total-users');
          const activeEl = document.getElementById('active-users');
          const adminEl = document.getElementById('admin-users');
          const recentEl = document.getElementById('recent-logins');
          
          if (totalEl) totalEl.textContent = totalUsers.toString();
          if (activeEl) activeEl.textContent = activeUsers.toString();
          if (adminEl) adminEl.textContent = adminUsers.toString();
          if (recentEl) recentEl.textContent = recentLogins.toString();
        }
      } catch (error) {
        console.error('Error loading user stats:', error);
      }
    }

    // Load stats when page loads
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', loadUserStats);
    } else {
      loadUserStats();
    }

    // Refresh stats when users are updated
    document.addEventListener('userUpdated', loadUserStats);
  </script>
</BaseLayout>
