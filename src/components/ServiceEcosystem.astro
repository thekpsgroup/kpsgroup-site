---
import { PORTFOLIO_COMPANIES, CLIENT_JOURNEYS } from '../data/constants';

// Ensure the data is available at build time
const portfolioCompanies = PORTFOLIO_COMPANIES;
const portfolioEntries = Object.entries(portfolioCompanies);
---

<section class="py-20 px-6 max-w-7xl mx-auto" id="service-ecosystem">
  <div class="text-center mb-16">
    <div class="inline-flex items-center gap-3 glass-card px-6 py-3 mb-8">
      <div class="w-2 h-2 bg-gold rounded-full animate-pulse"></div>
      <span class="text-sm font-medium text-gold/90 tracking-wide uppercase">The KPS Ecosystem</span>
      <div class="w-2 h-2 bg-gold rounded-full animate-pulse"></div>
    </div>
    
    <h2 class="text-4xl md:text-5xl font-bold text-gradient-gold mb-8 leading-tight">
      One Platform. Six Specialized Teams.<br/>
      <span class="text-goldLight">Infinite Possibilities.</span>
    </h2>
    
    <p class="text-xl text-white/80 max-w-4xl mx-auto leading-relaxed mb-12">
      The KPS Group orchestrates a suite of specialized companies, each mastering their domain while working in perfect harmony. 
      Watch how our ecosystem transforms businesses through strategic sequencing.
    </p>
  </div>

  <!-- Interactive Journey Selector -->
  <div class="mb-16">
    <div class="flex flex-wrap justify-center gap-4 mb-8">
      {Object.entries(CLIENT_JOURNEYS).map(([key, journey]) => (
        <button 
          class="journey-btn px-6 py-3 rounded-xl bg-gray-800/50 border border-gold/20 text-white/80 hover:text-gold hover:border-gold/50 transition-all duration-300"
          data-journey={key}
        >
          <span class="font-medium">{journey.name}</span>
          <p class="text-xs mt-1 opacity-70">{journey.description}</p>
        </button>
      ))}
    </div>
  </div>

  <!-- Service Cards Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16" id="services-grid">
    {portfolioEntries.map((entry) => {
      const key = entry[0];
      const company = entry[1];
      return (
        <div 
          class={`service-card relative group cursor-pointer transition-all duration-500 hover:scale-105`}
          data-company={key}
        >
        <div class="h-full p-8 rounded-2xl bg-gradient-to-br from-gray-900/80 to-gray-800/60 border border-gold/20 backdrop-blur-sm hover:border-gold/50 transition-all duration-300">
          <!-- Company Header -->
          <div class="flex items-center gap-4 mb-6">
            <div class="text-4xl">{company.icon}</div>
            <div>
              <h3 class="text-xl font-bold text-goldLight">{company.name}</h3>
              <div class={`h-1 w-16 bg-gradient-to-r ${company.color} rounded-full mt-2`}></div>
            </div>
          </div>

          <!-- Description -->
          <p class="text-gray-300 leading-relaxed mb-6">{company.description}</p>

          <!-- Specialties -->
          <div class="space-y-2 mb-6">
            {company.specialties.map((specialty) => (
              <div class="flex items-center gap-2 text-sm">
                <div class="w-1.5 h-1.5 bg-gold rounded-full"></div>
                <span class="text-gray-400">{specialty}</span>
              </div>
            ))}
          </div>

          <!-- Connection Indicator -->
          <div class="absolute top-4 right-4 connection-indicator opacity-0 transition-opacity duration-300">
            <div class="w-3 h-3 bg-gold rounded-full animate-pulse"></div>
          </div>

          <!-- Learn More Link -->
          <a 
            href={company.url} 
            target="_blank" 
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 text-gold hover:text-goldLight transition-colors duration-300 text-sm font-medium"
          >
            Learn More
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
            </svg>
          </a>
        </div>

        <!-- Flow Arrows (hidden by default) -->
        <div class="flow-arrow absolute -bottom-8 left-1/2 transform -translate-x-1/2 opacity-0 transition-all duration-500">
          <svg class="w-8 h-8 text-gold animate-bounce" fill="currentColor" viewBox="0 0 24 24">
            <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
          </svg>
        </div>
      </div>
      );
    })}
  </div>

  <!-- Journey Visualization -->
  <div class="relative">
    <div class="bg-gradient-to-br from-gray-900/80 to-gray-800/60 rounded-3xl p-8 border border-gold/20 backdrop-blur-sm">
      <h3 class="text-2xl font-bold text-goldLight mb-6 text-center">Your Success Journey</h3>
      
      <!-- Journey Path -->
      <div id="journey-path" class="flex flex-wrap justify-center items-center gap-4 min-h-[120px]">
        <div class="text-gray-400 text-center">
          <p class="text-lg">Select a journey above to see how our teams work together</p>
          <p class="text-sm mt-2 opacity-70">Each path is carefully orchestrated for maximum impact</p>
        </div>
      </div>

      <!-- Success Metrics -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mt-8 pt-8 border-t border-gold/20">
        <div class="text-center">
          <div class="text-3xl font-bold text-gold mb-2">300+</div>
          <div class="text-gray-400 text-sm">Successful Implementations</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-gold mb-2">95%</div>
          <div class="text-gray-400 text-sm">Client Retention Rate</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-gold mb-2">180%</div>
          <div class="text-gray-400 text-sm">Average ROI Improvement</div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .service-card.active {
    @apply border-gold/80 bg-gradient-to-br from-gold/10 to-goldLight/5;
  }
  
  .service-card.active .connection-indicator {
    @apply opacity-100;
  }
  
  .service-card.active .flow-arrow {
    @apply opacity-100;
  }
  
  .journey-btn.active {
    @apply bg-gradient-to-r from-gold/20 to-goldLight/20 border-gold text-gold;
  }
  
  .text-gradient-gold {
    @apply text-transparent bg-clip-text bg-gradient-to-r from-gold to-goldLight;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const journeyButtons = document.querySelectorAll('.journey-btn');
    const serviceCards = document.querySelectorAll('.service-card');
    const journeyPath = document.getElementById('journey-path');
    
    const journeyData = {
      startup: {
        name: 'Startup Journey',
        path: ['modernBrands', 'modernLedger', 'modernPay', 'modernStack'],
        description: 'From concept to scaling - complete business infrastructure',
        steps: [
          { company: 'modernBrands', action: 'Establish digital presence & brand identity' },
          { company: 'modernLedger', action: 'Set up financial infrastructure & accounting' },
          { company: 'modernPay', action: 'Implement payroll & HR compliance systems' },
          { company: 'modernStack', action: 'Build custom technology solutions' }
        ]
      },
      growth: {
        name: 'Growth Optimization',
        path: ['modernConsulting', 'modernStack', 'modernLedger', 'modernOS'],
        description: 'Streamline operations and optimize for rapid scaling',
        steps: [
          { company: 'modernConsulting', action: 'Analyze & optimize business processes' },
          { company: 'modernStack', action: 'Upgrade technology infrastructure' },
          { company: 'modernLedger', action: 'Advanced financial reporting & analysis' },
          { company: 'modernOS', action: 'Leadership development & team optimization' }
        ]
      },
      enterprise: {
        name: 'Enterprise Transformation',
        path: ['modernOS', 'modernConsulting', 'modernStack', 'modernPay'],
        description: 'Comprehensive organizational excellence and workforce leadership',
        steps: [
          { company: 'modernOS', action: 'Transform organizational culture & leadership' },
          { company: 'modernConsulting', action: 'Strategic planning & process reengineering' },
          { company: 'modernStack', action: 'Enterprise-level technology solutions' },
          { company: 'modernPay', action: 'Advanced workforce management & compliance' }
        ]
      }
    };

    const companyColors = {
      modernBrands: 'from-purple-500 to-purple-700',
      modernLedger: 'from-green-500 to-green-700',
      modernPay: 'from-blue-500 to-blue-700',
      modernConsulting: 'from-orange-500 to-orange-700',
      modernStack: 'from-cyan-500 to-cyan-700',
      modernOS: 'from-indigo-500 to-indigo-700'
    };

    function showJourney(journeyKey) {
      // Reset all states
      journeyButtons.forEach(btn => btn.classList.remove('active'));
      serviceCards.forEach(card => {
        card.classList.remove('active');
        card.querySelector('.flow-arrow').style.opacity = '0';
      });

      // Activate selected journey button
      document.querySelector(`[data-journey="${journeyKey}"]`).classList.add('active');

      const journey = journeyData[journeyKey];
      
      // Create journey visualization
      journeyPath.innerHTML = '';
      
      journey.steps.forEach((step, index) => {
        // Create step container
        const stepElement = document.createElement('div');
        stepElement.className = 'flex flex-col items-center text-center max-w-xs mx-2 mb-4';
        
        // Company circle with icon
        const companyData = getCompanyData(step.company);
        const circleElement = document.createElement('div');
        circleElement.className = `w-16 h-16 rounded-full bg-gradient-to-br ${companyColors[step.company]} flex items-center justify-center text-2xl text-white mb-3 transform hover:scale-110 transition-transform duration-300`;
        circleElement.innerHTML = companyData.icon;
        
        // Company name
        const nameElement = document.createElement('div');
        nameElement.className = 'text-goldLight font-semibold text-sm mb-2';
        nameElement.textContent = companyData.name;
        
        // Action description
        const actionElement = document.createElement('div');
        actionElement.className = 'text-gray-400 text-xs leading-relaxed';
        actionElement.textContent = step.action;
        
        stepElement.appendChild(circleElement);
        stepElement.appendChild(nameElement);
        stepElement.appendChild(actionElement);
        
        journeyPath.appendChild(stepElement);
        
        // Add arrow between steps (except for last step)
        if (index < journey.steps.length - 1) {
          const arrowElement = document.createElement('div');
          arrowElement.className = 'flex items-center mx-2';
          arrowElement.innerHTML = `
            <svg class="w-6 h-6 text-gold/60" fill="currentColor" viewBox="0 0 24 24">
              <path d="M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"/>
            </svg>
          `;
          journeyPath.appendChild(arrowElement);
        }
      });

      // Highlight active service cards
      journey.path.forEach((companyKey, index) => {
        const card = document.querySelector(`[data-company="${companyKey}"]`);
        if (card) {
          setTimeout(() => {
            card.classList.add('active');
            if (index < journey.path.length - 1) {
              card.querySelector('.flow-arrow').style.opacity = '1';
            }
          }, index * 200);
        }
      });
    }

    function getCompanyData(companyKey) {
      const companies = {
        modernBrands: { name: 'Modern Brands', icon: '🎨' },
        modernLedger: { name: 'Modern Ledger', icon: '📊' },
        modernPay: { name: 'Modern Pay', icon: '💰' },
        modernConsulting: { name: 'Modern Consulting', icon: '⚡' },
        modernStack: { name: 'Modern Stack', icon: '🚀' },
        modernOS: { name: 'Modern OS', icon: '🎯' }
      };
      return companies[companyKey];
    }

    // Add click handlers
    journeyButtons.forEach(button => {
      button.addEventListener('click', () => {
        const journeyKey = button.getAttribute('data-journey');
        showJourney(journeyKey);
      });
    });

    // Show default journey on load
    showJourney('startup');
  });
</script>
