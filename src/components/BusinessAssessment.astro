---
// Interactive Business Assessment Tool
// Smart questionnaire that provides personalized recommendations

export interface Props {
  cityData?: any;
  mode?: 'embedded' | 'standalone';
  maxQuestions?: number;
  showProgress?: boolean;
  enableEmailCapture?: boolean;
  className?: string;
}

const {
  cityData,
  mode = 'embedded',
  maxQuestions = 25,
  showProgress = true,
  enableEmailCapture = true,
  className = ""
} = Astro.props;

const assessmentId = `kps-business-assessment-${crypto.randomUUID().substring(0, 8)}`;

// Assessment questions database with smart branching logic
const assessmentQuestions = [
  {
    id: 'business-stage',
    category: 'general',
    type: 'single-choice',
    question: 'What stage is your business in?',
    options: [
      { value: 'startup', label: 'Just starting (0-6 months)', weight: 1 },
      { value: 'early', label: 'Early stage (6 months - 2 years)', weight: 2 },
      { value: 'growth', label: 'Growth stage (2-5 years)', weight: 3 },
      { value: 'established', label: 'Established (5+ years)', weight: 4 }
    ],
    priority: 'high',
    branching: {
      'startup': ['accounting-method', 'payroll-needs'],
      'early': ['accounting-software', 'employee-count'],
      'growth': ['scaling-challenges', 'technology-integration'],
      'established': ['optimization-goals', 'compliance-concerns']
    }
  },
  {
    id: 'employee-count',
    category: 'hr',
    type: 'single-choice',
    question: 'How many employees do you currently have?',
    options: [
      { value: '0', label: 'Just me (sole proprietor)', weight: 1 },
      { value: '1-5', label: '1-5 employees', weight: 2 },
      { value: '6-15', label: '6-15 employees', weight: 3 },
      { value: '16-50', label: '16-50 employees', weight: 4 },
      { value: '50+', label: '50+ employees', weight: 5 }
    ],
    priority: 'high',
    branching: {
      '0': ['business-structure', 'revenue-tracking'],
      '1-5': ['payroll-method', 'benefits-offered'],
      '6-15': ['hr-policies', 'payroll-complexity'],
      '16-50': ['hr-department', 'compliance-tracking'],
      '50+': ['enterprise-needs', 'multi-location']
    }
  },
  {
    id: 'accounting-software',
    category: 'quickbooks',
    type: 'single-choice',
    question: 'What accounting software do you currently use?',
    options: [
      { value: 'none', label: 'No software (Excel/paper)', weight: 1 },
      { value: 'quickbooks', label: 'QuickBooks (Online or Desktop)', weight: 3 },
      { value: 'other', label: 'Other accounting software', weight: 2 },
      { value: 'multiple', label: 'Multiple systems', weight: 4 }
    ],
    priority: 'high',
    branching: {
      'none': ['excel-complexity', 'transaction-volume'],
      'quickbooks': ['quickbooks-satisfaction', 'integration-needs'],
      'other': ['software-issues', 'migration-interest'],
      'multiple': ['system-integration', 'data-consistency']
    }
  },
  {
    id: 'annual-revenue',
    category: 'financial',
    type: 'single-choice',
    question: 'What\'s your annual revenue range?',
    options: [
      { value: 'under-100k', label: 'Under $100K', weight: 1 },
      { value: '100k-500k', label: '$100K - $500K', weight: 2 },
      { value: '500k-1m', label: '$500K - $1M', weight: 3 },
      { value: '1m-5m', label: '$1M - $5M', weight: 4 },
      { value: 'over-5m', label: 'Over $5M', weight: 5 }
    ],
    priority: 'high'
  },
  {
    id: 'industry',
    category: 'general',
    type: 'single-choice',
    question: 'What industry is your business in?',
    options: [
      { value: 'technology', label: 'Technology/Software', weight: 1 },
      { value: 'healthcare', label: 'Healthcare/Medical', weight: 2 },
      { value: 'construction', label: 'Construction/Contracting', weight: 3 },
      { value: 'retail', label: 'Retail/E-commerce', weight: 4 },
      { value: 'professional', label: 'Professional Services', weight: 5 },
      { value: 'manufacturing', label: 'Manufacturing', weight: 6 },
      { value: 'hospitality', label: 'Hospitality/Food Service', weight: 7 },
      { value: 'other', label: 'Other', weight: 8 }
    ],
    priority: 'high'
  },
  {
    id: 'biggest-challenge',
    category: 'general',
    type: 'multiple-choice',
    question: 'What are your biggest business challenges? (Select all that apply)',
    options: [
      { value: 'cash-flow', label: 'Cash flow management', weight: 3 },
      { value: 'bookkeeping', label: 'Keeping up with bookkeeping', weight: 3 },
      { value: 'taxes', label: 'Tax compliance and planning', weight: 2 },
      { value: 'payroll', label: 'Payroll processing', weight: 2 },
      { value: 'growth', label: 'Managing growth', weight: 4 },
      { value: 'technology', label: 'Technology integration', weight: 2 },
      { value: 'compliance', label: 'Regulatory compliance', weight: 3 },
      { value: 'reporting', label: 'Financial reporting', weight: 2 }
    ],
    priority: 'high'
  },
  {
    id: 'bookkeeping-frequency',
    category: 'bookkeeping',
    type: 'single-choice',
    question: 'How often do you currently update your books?',
    options: [
      { value: 'never', label: 'Never/Rarely', weight: 1 },
      { value: 'annually', label: 'Once a year (tax time)', weight: 2 },
      { value: 'quarterly', label: 'Quarterly', weight: 3 },
      { value: 'monthly', label: 'Monthly', weight: 4 },
      { value: 'weekly', label: 'Weekly or more', weight: 5 }
    ],
    priority: 'medium'
  },
  {
    id: 'payroll-method',
    category: 'payroll',
    type: 'single-choice',
    question: 'How do you currently handle payroll?',
    options: [
      { value: 'manual', label: 'Manual calculations/checks', weight: 1 },
      { value: 'software', label: 'Payroll software', weight: 3 },
      { value: 'outsourced', label: 'Outsourced to another company', weight: 2 },
      { value: 'none', label: 'No employees yet', weight: 0 }
    ],
    priority: 'medium',
    conditional: (answers) => answers['employee-count'] !== '0'
  },
  {
    id: 'financial-reports',
    category: 'reporting',
    type: 'single-choice',
    question: 'How often do you review financial reports?',
    options: [
      { value: 'never', label: 'Never/Rarely', weight: 1 },
      { value: 'annually', label: 'Once a year', weight: 2 },
      { value: 'quarterly', label: 'Quarterly', weight: 3 },
      { value: 'monthly', label: 'Monthly', weight: 4 },
      { value: 'weekly', label: 'Weekly', weight: 5 }
    ],
    priority: 'medium'
  },
  {
    id: 'tax-preparation',
    category: 'tax',
    type: 'single-choice',
    question: 'Who currently prepares your business taxes?',
    options: [
      { value: 'self', label: 'I do them myself', weight: 1 },
      { value: 'accountant', label: 'Local accountant/CPA', weight: 3 },
      { value: 'software', label: 'Tax software', weight: 2 },
      { value: 'varies', label: 'It varies year to year', weight: 1 }
    ],
    priority: 'medium'
  },
  {
    id: 'growth-goals',
    category: 'planning',
    type: 'single-choice',
    question: 'What are your growth goals for the next 12 months?',
    options: [
      { value: 'maintain', label: 'Maintain current size', weight: 1 },
      { value: 'modest', label: 'Modest growth (10-25%)', weight: 2 },
      { value: 'significant', label: 'Significant growth (25-50%)', weight: 3 },
      { value: 'aggressive', label: 'Aggressive growth (50%+)', weight: 4 }
    ],
    priority: 'medium'
  },
  {
    id: 'time-spent-admin',
    category: 'efficiency',
    type: 'single-choice',
    question: 'How much time do you spend on administrative/financial tasks per week?',
    options: [
      { value: 'minimal', label: 'Less than 2 hours', weight: 1 },
      { value: 'some', label: '2-5 hours', weight: 2 },
      { value: 'significant', label: '5-10 hours', weight: 3 },
      { value: 'excessive', label: 'More than 10 hours', weight: 4 }
    ],
    priority: 'high'
  },
  {
    id: 'technology-comfort',
    category: 'technology',
    type: 'single-choice',
    question: 'How comfortable are you with technology?',
    options: [
      { value: 'basic', label: 'Basic (email, simple software)', weight: 1 },
      { value: 'intermediate', label: 'Intermediate (multiple software tools)', weight: 2 },
      { value: 'advanced', label: 'Advanced (love trying new tech)', weight: 3 }
    ],
    priority: 'low'
  },
  {
    id: 'current-pain-points',
    category: 'general',
    type: 'multiple-choice',
    question: 'Which of these pain points affect you most? (Select all that apply)',
    options: [
      { value: 'late-reports', label: 'Financial reports are always late', weight: 2 },
      { value: 'tax-stress', label: 'Tax season is stressful', weight: 3 },
      { value: 'cash-flow-blind', label: 'No visibility into cash flow', weight: 4 },
      { value: 'payroll-errors', label: 'Payroll errors/delays', weight: 3 },
      { value: 'compliance-worry', label: 'Worry about compliance issues', weight: 3 },
      { value: 'growth-limited', label: 'Growth limited by admin burden', weight: 4 }
    ],
    priority: 'high'
  },
  {
    id: 'budget-range',
    category: 'budget',
    type: 'single-choice',
    question: 'What\'s your monthly budget for business services?',
    options: [
      { value: 'under-500', label: 'Under $500/month', weight: 1 },
      { value: '500-1000', label: '$500-$1,000/month', weight: 2 },
      { value: '1000-2000', label: '$1,000-$2,000/month', weight: 3 },
      { value: '2000-5000', label: '$2,000-$5,000/month', weight: 4 },
      { value: 'over-5000', label: 'Over $5,000/month', weight: 5 }
    ],
    priority: 'medium'
  }
];

// Service recommendations based on assessment results
const serviceRecommendations = {
  quickbooks: {
    name: 'QuickBooks Setup & Training',
    icon: 'fas fa-calculator',
    color: '#3b82f6',
    basePrice: 497,
    description: 'Professional QuickBooks setup with training',
    triggers: ['accounting-software:none', 'accounting-software:other', 'bookkeeping-frequency:never|annually'],
    priority: (score) => score >= 3 ? 'high' : 'medium'
  },
  bookkeeping: {
    name: 'Monthly Bookkeeping',
    icon: 'fas fa-book',
    color: '#8b5cf6',
    basePrice: 350,
    description: 'Professional monthly bookkeeping and reconciliation',
    triggers: ['time-spent-admin:significant|excessive', 'bookkeeping-frequency:never|annually|quarterly'],
    priority: (score) => score >= 4 ? 'high' : 'medium'
  },
  payroll: {
    name: 'Payroll Services',
    icon: 'fas fa-money-check-alt',
    color: '#10b981',
    basePrice: 150,
    description: 'Complete payroll processing and tax filing',
    triggers: ['employee-count:1-5|6-15|16-50|50+', 'payroll-method:manual'],
    priority: (score) => score >= 2 ? 'high' : 'low'
  },
  consulting: {
    name: 'Business Consulting',
    icon: 'fas fa-chart-line',
    color: '#f59e0b',
    basePrice: 200,
    description: 'Strategic planning and business optimization',
    triggers: ['growth-goals:significant|aggressive', 'biggest-challenge:growth'],
    priority: (score) => score >= 3 ? 'high' : 'medium'
  },
  tax: {
    name: 'Tax Preparation & Planning',
    icon: 'fas fa-file-invoice-dollar',
    color: '#ef4444',
    basePrice: 700,
    description: 'Business tax preparation and strategic planning',
    triggers: ['tax-preparation:self|software|varies', 'current-pain-points:tax-stress'],
    priority: (score) => score >= 2 ? 'high' : 'medium'
  },
  hr: {
    name: 'HR Services',
    icon: 'fas fa-users',
    color: '#06b6d4',
    basePrice: 275,
    description: 'Employee handbook, policies, and compliance',
    triggers: ['employee-count:6-15|16-50|50+', 'current-pain-points:compliance-worry'],
    priority: (score) => score >= 3 ? 'high' : 'low'
  }
};
---

<div class={`kps-business-assessment ${mode} ${className}`} data-assessment-id={assessmentId}>
  <!-- Assessment Header -->
  <div class="assessment-header">
    <div class="header-content">
      <h2 class="assessment-title">Business Assessment</h2>
      <p class="assessment-subtitle">
        Answer a few questions to get personalized recommendations for your business
        {cityData ? ` in ${cityData.name}, ${cityData.stateCode}` : ''}
      </p>
    </div>

    {showProgress && (
      <div class="progress-container">
        <div class="progress-bar">
          <div class="progress-fill" data-progress-fill></div>
        </div>
        <div class="progress-text">
          <span data-current-question>1</span> of <span data-total-questions>0</span>
        </div>
      </div>
    )}
  </div>

  <!-- Assessment Form -->
  <div class="assessment-form" data-assessment-form>
    <div class="questions-container" data-questions-container>
      <!-- Questions will be dynamically generated -->
    </div>

    <div class="form-navigation">
      <button class="btn btn-secondary" data-prev-question disabled>
        <i class="fas fa-arrow-left"></i>
        Previous
      </button>
      
      <button class="btn btn-primary" data-next-question disabled>
        Next
        <i class="fas fa-arrow-right"></i>
      </button>
    </div>
  </div>

  <!-- Results Section -->
  <div class="assessment-results" data-assessment-results style="display: none;">
    <div class="results-header">
      <h3>Your Personalized Recommendations</h3>
      <p class="results-subtitle">
        Based on your responses, here are our recommendations to help your business succeed:
      </p>
    </div>

    <div class="recommendations-grid" data-recommendations-grid>
      <!-- Recommendations will be dynamically generated -->
    </div>

    <div class="results-summary" data-results-summary>
      <!-- Summary will be dynamically generated -->
    </div>

    <div class="results-actions">
      <button class="btn btn-primary btn-large" data-schedule-consultation>
        <i class="fas fa-calendar-alt"></i>
        Schedule Free Consultation
      </button>
      
      <button class="btn btn-secondary" data-download-report>
        <i class="fas fa-download"></i>
        Download Report
      </button>
      
      <button class="btn btn-outline" data-start-over>
        <i class="fas fa-redo"></i>
        Take Assessment Again
      </button>
    </div>
  </div>

  <!-- Email Capture Modal -->
  {enableEmailCapture && (
    <div class="email-capture-modal" data-email-modal style="display: none;">
      <div class="modal-content">
        <div class="modal-header">
          <h3>Get Your Personalized Report</h3>
          <p>Enter your email to receive a detailed report with your recommendations and next steps.</p>
        </div>
        
        <form class="email-capture-form" data-email-form>
          <div class="form-group">
            <label for="assessmentEmail">Email Address</label>
            <input type="email" id="assessmentEmail" name="email" required 
                   placeholder="your@email.com" />
          </div>
          
          <div class="form-group">
            <label for="assessmentName">Name (Optional)</label>
            <input type="text" id="assessmentName" name="name" 
                   placeholder="Your name" />
          </div>
          
          <div class="form-group">
            <label for="assessmentCompany">Company Name (Optional)</label>
            <input type="text" id="assessmentCompany" name="company" 
                   placeholder="Your company" />
          </div>
          
          <div class="form-actions">
            <button type="button" class="btn btn-secondary" data-skip-email>
              Skip for Now
            </button>
            <button type="submit" class="btn btn-primary">
              Get My Report
            </button>
          </div>
        </form>
      </div>
    </div>
  )}

  <!-- Loading Overlay -->
  <div class="assessment-loading" data-assessment-loading style="display: none;">
    <div class="loading-content">
      <div class="loading-spinner"></div>
      <p>Analyzing your responses...</p>
    </div>
  </div>
</div>

<style>
  .kps-business-assessment {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
    background: white;
    border-radius: 16px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .kps-business-assessment.standalone {
    min-height: 80vh;
    display: flex;
    flex-direction: column;
  }

  .assessment-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .assessment-title {
    color: #1e3a8a;
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 1rem;
    background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .assessment-subtitle {
    color: #64748b;
    font-size: 1.1rem;
    margin: 0 0 2rem;
    line-height: 1.6;
  }

  .progress-container {
    max-width: 400px;
    margin: 0 auto;
  }

  .progress-bar {
    background: #e5e7eb;
    height: 8px;
    border-radius: 4px;
    overflow: hidden;
    margin-bottom: 1rem;
  }

  .progress-fill {
    background: linear-gradient(90deg, #ffd700 0%, #f59e0b 100%);
    height: 100%;
    width: 0%;
    transition: width 0.3s ease;
    border-radius: 4px;
  }

  .progress-text {
    text-align: center;
    color: #6b7280;
    font-weight: 600;
    font-size: 0.9rem;
  }

  .assessment-form {
    flex: 1;
  }

  .questions-container {
    min-height: 400px;
    margin-bottom: 2rem;
  }

  .question-slide {
    display: none;
    animation: slideIn 0.3s ease-out;
  }

  .question-slide.active {
    display: block;
  }

  .question-header {
    margin-bottom: 2rem;
  }

  .question-number {
    color: #ffd700;
    font-weight: 700;
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    margin-bottom: 0.5rem;
  }

  .question-text {
    color: #1e3a8a;
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.4;
    margin: 0;
  }

  .question-options {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .option-item {
    background: #f8f9fa;
    border: 2px solid #e5e7eb;
    border-radius: 12px;
    padding: 1.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .option-item:hover {
    border-color: #ffd700;
    background: rgba(255, 215, 0, 0.05);
    transform: translateY(-1px);
  }

  .option-item.selected {
    border-color: #ffd700;
    background: rgba(255, 215, 0, 0.1);
    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.3);
  }

  .option-radio,
  .option-checkbox {
    width: 20px;
    height: 20px;
    border: 2px solid #d1d5db;
    border-radius: 50%;
    position: relative;
    flex-shrink: 0;
  }

  .option-checkbox {
    border-radius: 4px;
  }

  .option-item.selected .option-radio::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10px;
    height: 10px;
    background: #ffd700;
    border-radius: 50%;
  }

  .option-item.selected .option-checkbox::after {
    content: '✓';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: #ffd700;
    font-weight: bold;
    font-size: 12px;
  }

  .option-label {
    flex: 1;
    color: #374151;
    font-weight: 500;
    font-size: 1.1rem;
  }

  .form-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }

  .btn {
    padding: 0.75rem 2rem;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 1rem;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
  }

  .btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
  }

  .btn-primary {
    background: #ffd700;
    color: #1e3a8a;
  }

  .btn-primary:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 5px 15px rgba(255, 215, 0, 0.4);
  }

  .btn-secondary {
    background: #6b7280;
    color: white;
  }

  .btn-secondary:hover:not(:disabled) {
    background: #4b5563;
    transform: translateY(-1px);
  }

  .btn-outline {
    background: transparent;
    color: #1e3a8a;
    border: 2px solid #1e3a8a;
  }

  .btn-outline:hover {
    background: #1e3a8a;
    color: white;
  }

  .btn-large {
    padding: 1rem 2.5rem;
    font-size: 1.1rem;
  }

  .assessment-results {
    animation: fadeIn 0.5s ease-out;
  }

  .results-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .results-header h3 {
    color: #1e3a8a;
    font-size: 2rem;
    font-weight: 700;
    margin: 0 0 1rem;
  }

  .results-subtitle {
    color: #64748b;
    font-size: 1.1rem;
    line-height: 1.6;
    margin: 0;
  }

  .recommendations-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-bottom: 3rem;
  }

  .recommendation-card {
    background: white;
    border: 2px solid #e5e7eb;
    border-radius: 12px;
    padding: 2rem;
    transition: all 0.2s ease;
    position: relative;
  }

  .recommendation-card.high-priority {
    border-color: #ffd700;
    background: rgba(255, 215, 0, 0.05);
  }

  .recommendation-card.medium-priority {
    border-color: #3b82f6;
  }

  .recommendation-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .priority-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    padding: 0.25rem 0.75rem;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  .priority-badge.high {
    background: #ef4444;
    color: white;
  }

  .priority-badge.medium {
    background: #f59e0b;
    color: white;
  }

  .priority-badge.low {
    background: #6b7280;
    color: white;
  }

  .recommendation-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .recommendation-icon {
    width: 50px;
    height: 50px;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
  }

  .recommendation-title {
    color: #1e3a8a;
    font-size: 1.3rem;
    font-weight: 700;
    margin: 0;
  }

  .recommendation-price {
    color: #ffd700;
    font-size: 1.1rem;
    font-weight: 700;
    margin-top: 0.5rem;
  }

  .recommendation-description {
    color: #6b7280;
    line-height: 1.6;
    margin: 1rem 0;
  }

  .recommendation-features {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
  }

  .recommendation-features li {
    color: #374151;
    padding: 0.5rem 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .recommendation-features li::before {
    content: '✓';
    color: #10b981;
    font-weight: bold;
  }

  .results-summary {
    background: #f8f9fa;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 3rem;
    text-align: center;
  }

  .summary-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    color: #1e3a8a;
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    color: #6b7280;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.9rem;
    letter-spacing: 1px;
  }

  .results-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .email-capture-modal {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    padding: 2rem;
  }

  .modal-content {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    max-width: 500px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
  }

  .modal-header h3 {
    color: #1e3a8a;
    margin: 0 0 0.5rem;
    font-size: 1.5rem;
  }

  .modal-header p {
    color: #6b7280;
    margin: 0 0 2rem;
    line-height: 1.6;
  }

  .email-capture-form .form-group {
    margin-bottom: 1.5rem;
  }

  .email-capture-form label {
    display: block;
    color: #374151;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .email-capture-form input {
    width: 100%;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    padding: 0.75rem;
    font-size: 1rem;
    transition: border-color 0.2s ease;
  }

  .email-capture-form input:focus {
    outline: none;
    border-color: #ffd700;
  }

  .form-actions {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    margin-top: 2rem;
  }

  .assessment-loading {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 16px;
  }

  .loading-content {
    text-align: center;
  }

  .loading-spinner {
    width: 50px;
    height: 50px;
    border: 4px solid #e5e7eb;
    border-top: 4px solid #ffd700;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin: 0 auto 1rem;
  }

  .loading-content p {
    color: #6b7280;
    font-weight: 600;
  }

  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .kps-business-assessment {
      padding: 1rem;
      margin: 1rem;
    }

    .assessment-title {
      font-size: 2rem;
    }

    .question-text {
      font-size: 1.3rem;
    }

    .option-item {
      padding: 1rem;
    }

    .form-navigation {
      flex-direction: column;
      gap: 1rem;
    }

    .form-navigation .btn {
      width: 100%;
      justify-content: center;
    }

    .recommendations-grid {
      grid-template-columns: 1fr;
    }

    .results-actions {
      flex-direction: column;
    }

    .results-actions .btn {
      width: 100%;
      justify-content: center;
    }

    .summary-stats {
      grid-template-columns: 1fr 1fr;
    }

    .form-actions {
      flex-direction: column;
    }

    .form-actions .btn {
      width: 100%;
      justify-content: center;
    }
  }
</style>

<!-- Assessment Script -->
<script is:inline define:vars={{ assessmentId, assessmentQuestions, serviceRecommendations, cityData, maxQuestions, enableEmailCapture }}>
  window.KPSBusinessAssessment = {
    config: {
      assessmentId,
      assessmentQuestions,
      serviceRecommendations,
      cityData,
      maxQuestions,
      enableEmailCapture
    },

    currentQuestionIndex: 0,
    questions: [],
    answers: {},
    totalQuestions: 0,
    
    init: function() {
      this.container = document.querySelector(`[data-assessment-id="${this.config.assessmentId}"]`);
      if (!this.container) return;

      this.prepareQuestions();
      this.setupEventListeners();
      this.renderCurrentQuestion();
      this.updateProgress();
      
      console.log('KPS Business Assessment initialized');
    },

    prepareQuestions: function() {
      // Start with high-priority general questions
      this.questions = this.config.assessmentQuestions
        .filter(q => q.priority === 'high')
        .slice(0, Math.min(this.config.maxQuestions, 10));
      
      this.totalQuestions = this.questions.length;
      
      // Update total questions display
      const totalEl = this.container.querySelector('[data-total-questions]');
      if (totalEl) {
        totalEl.textContent = this.totalQuestions;
      }
    },

    setupEventListeners: function() {
      // Navigation buttons
      const prevBtn = this.container.querySelector('[data-prev-question]');
      const nextBtn = this.container.querySelector('[data-next-question]');
      
      if (prevBtn) {
        prevBtn.addEventListener('click', () => this.previousQuestion());
      }
      
      if (nextBtn) {
        nextBtn.addEventListener('click', () => this.nextQuestion());
      }

      // Results actions
      const scheduleBtn = this.container.querySelector('[data-schedule-consultation]');
      if (scheduleBtn) {
        scheduleBtn.addEventListener('click', () => this.scheduleConsultation());
      }

      const downloadBtn = this.container.querySelector('[data-download-report]');
      if (downloadBtn) {
        downloadBtn.addEventListener('click', () => this.downloadReport());
      }

      const startOverBtn = this.container.querySelector('[data-start-over]');
      if (startOverBtn) {
        startOverBtn.addEventListener('click', () => this.startOver());
      }

      // Email capture
      if (this.config.enableEmailCapture) {
        const emailForm = this.container.querySelector('[data-email-form]');
        if (emailForm) {
          emailForm.addEventListener('submit', (e) => {
            e.preventDefault();
            this.submitEmailCapture(e.target);
          });
        }

        const skipBtn = this.container.querySelector('[data-skip-email]');
        if (skipBtn) {
          skipBtn.addEventListener('click', () => this.skipEmailCapture());
        }
      }
    },

    renderCurrentQuestion: function() {
      const question = this.questions[this.currentQuestionIndex];
      if (!question) return;

      const container = this.container.querySelector('[data-questions-container]');
      if (!container) return;

      const questionHtml = `
        <div class="question-slide active">
          <div class="question-header">
            <div class="question-number">Question ${this.currentQuestionIndex + 1}</div>
            <h3 class="question-text">${question.question}</h3>
          </div>
          
          <div class="question-options">
            ${question.options.map((option, index) => `
              <div class="option-item" data-option-value="${option.value}" data-question-option>
                <div class="${question.type === 'multiple-choice' ? 'option-checkbox' : 'option-radio'}"></div>
                <div class="option-label">${option.label}</div>
              </div>
            `).join('')}
          </div>
        </div>
      `;

      container.innerHTML = questionHtml;

      // Add option click handlers
      container.querySelectorAll('[data-question-option]').forEach(option => {
        option.addEventListener('click', () => this.selectOption(question, option));
      });

      // Restore previous answer if exists
      this.restorePreviousAnswer(question);
      this.updateNavigation();
    },

    selectOption: function(question, optionElement) {
      const value = optionElement.dataset.optionValue;
      
      if (question.type === 'multiple-choice') {
        // Handle multiple choice
        const currentAnswers = this.answers[question.id] || [];
        const index = currentAnswers.indexOf(value);
        
        if (index > -1) {
          currentAnswers.splice(index, 1);
          optionElement.classList.remove('selected');
        } else {
          currentAnswers.push(value);
          optionElement.classList.add('selected');
        }
        
        this.answers[question.id] = currentAnswers;
      } else {
        // Handle single choice
        // Clear previous selections
        this.container.querySelectorAll('[data-question-option]').forEach(el => {
          el.classList.remove('selected');
        });
        
        // Select current option
        optionElement.classList.add('selected');
        this.answers[question.id] = value;
      }

      this.updateNavigation();

      // Auto-advance for single choice after short delay
      if (question.type === 'single-choice') {
        setTimeout(() => {
          if (this.currentQuestionIndex < this.totalQuestions - 1) {
            this.nextQuestion();
          } else {
            this.completeAssessment();
          }
        }, 300);
      }
    },

    restorePreviousAnswer: function(question) {
      const answer = this.answers[question.id];
      if (!answer) return;

      if (question.type === 'multiple-choice') {
        answer.forEach(value => {
          const option = this.container.querySelector(`[data-option-value="${value}"]`);
          if (option) option.classList.add('selected');
        });
      } else {
        const option = this.container.querySelector(`[data-option-value="${answer}"]`);
        if (option) option.classList.add('selected');
      }
    },

    nextQuestion: function() {
      if (this.currentQuestionIndex < this.totalQuestions - 1) {
        this.currentQuestionIndex++;
        this.renderCurrentQuestion();
        this.updateProgress();
      } else {
        this.completeAssessment();
      }
    },

    previousQuestion: function() {
      if (this.currentQuestionIndex > 0) {
        this.currentQuestionIndex--;
        this.renderCurrentQuestion();
        this.updateProgress();
      }
    },

    updateNavigation: function() {
      const prevBtn = this.container.querySelector('[data-prev-question]');
      const nextBtn = this.container.querySelector('[data-next-question]');
      const currentQuestion = this.questions[this.currentQuestionIndex];
      const hasAnswer = this.answers[currentQuestion.id];

      if (prevBtn) {
        prevBtn.disabled = this.currentQuestionIndex === 0;
      }

      if (nextBtn) {
        if (this.currentQuestionIndex === this.totalQuestions - 1) {
          nextBtn.textContent = 'Complete Assessment';
          nextBtn.innerHTML = 'Complete Assessment <i class="fas fa-check"></i>';
        } else {
          nextBtn.innerHTML = 'Next <i class="fas fa-arrow-right"></i>';
        }
        
        nextBtn.disabled = !hasAnswer || (Array.isArray(hasAnswer) && hasAnswer.length === 0);
      }
    },

    updateProgress: function() {
      const progress = ((this.currentQuestionIndex + 1) / this.totalQuestions) * 100;
      
      const progressFill = this.container.querySelector('[data-progress-fill]');
      if (progressFill) {
        progressFill.style.width = `${progress}%`;
      }

      const currentEl = this.container.querySelector('[data-current-question]');
      if (currentEl) {
        currentEl.textContent = this.currentQuestionIndex + 1;
      }
    },

    completeAssessment: function() {
      this.showLoading();
      
      // Simulate processing time
      setTimeout(() => {
        this.generateRecommendations();
        this.hideLoading();
        
        if (this.config.enableEmailCapture) {
          this.showEmailCapture();
        } else {
          this.showResults();
        }
      }, 2000);
    },

    generateRecommendations: function() {
      this.recommendations = [];
      
      // Calculate scores for each service
      Object.entries(this.config.serviceRecommendations).forEach(([serviceKey, service]) => {
        let score = 0;
        
        // Check trigger conditions
        service.triggers.forEach(trigger => {
          const [questionId, conditions] = trigger.split(':');
          const answer = this.answers[questionId];
          
          if (answer) {
            const conditionList = conditions.split('|');
            const answerArray = Array.isArray(answer) ? answer : [answer];
            
            if (answerArray.some(a => conditionList.includes(a))) {
              score += 2;
            }
          }
        });
        
        // Add contextual scoring
        score += this.calculateContextualScore(serviceKey);
        
        if (score > 0) {
          this.recommendations.push({
            ...service,
            key: serviceKey,
            score: score,
            priority: service.priority(score)
          });
        }
      });

      // Sort by score and priority
      this.recommendations.sort((a, b) => {
        const priorityOrder = { high: 3, medium: 2, low: 1 };
        const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];
        return priorityDiff !== 0 ? priorityDiff : b.score - a.score;
      });

      // Limit to top 4 recommendations
      this.recommendations = this.recommendations.slice(0, 4);
    },

    calculateContextualScore: function(serviceKey) {
      let score = 0;
      
      // Employee count affects multiple services
      const employees = this.answers['employee-count'];
      if (employees && employees !== '0') {
        if (serviceKey === 'payroll' || serviceKey === 'hr') score += 2;
      }

      // Revenue affects service complexity
      const revenue = this.answers['annual-revenue'];
      if (revenue === 'over-5m' || revenue === '1m-5m') {
        score += 1;
      }

      // Time spent on admin
      const timeSpent = this.answers['time-spent-admin'];
      if (timeSpent === 'excessive' || timeSpent === 'significant') {
        if (serviceKey === 'bookkeeping' || serviceKey === 'payroll') score += 2;
      }

      // Growth goals
      const growth = this.answers['growth-goals'];
      if (growth === 'aggressive' || growth === 'significant') {
        if (serviceKey === 'consulting') score += 2;
      }

      return score;
    },

    showEmailCapture: function() {
      const modal = this.container.querySelector('[data-email-modal]');
      if (modal) {
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      }
    },

    submitEmailCapture: function(form) {
      const formData = new FormData(form);
      
      // Add assessment data
      formData.append('assessmentData', JSON.stringify({
        answers: this.answers,
        recommendations: this.recommendations,
        cityData: this.config.cityData,
        timestamp: new Date().toISOString()
      }));

      // Send to backend
      fetch('/api/assessment-results', {
        method: 'POST',
        body: formData
      }).then(response => {
        if (response.ok) {
          this.hideEmailCapture();
          this.showResults();
        }
      }).catch(error => {
        console.error('Error submitting email:', error);
        this.hideEmailCapture();
        this.showResults();
      });
    },

    skipEmailCapture: function() {
      this.hideEmailCapture();
      this.showResults();
    },

    hideEmailCapture: function() {
      const modal = this.container.querySelector('[data-email-modal]');
      if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = '';
      }
    },

    showResults: function() {
      // Hide assessment form
      const form = this.container.querySelector('[data-assessment-form]');
      if (form) form.style.display = 'none';

      // Show results
      const results = this.container.querySelector('[data-assessment-results]');
      if (results) results.style.display = 'block';

      this.renderRecommendations();
      this.renderSummary();

      // Track completion
      if (window.KPSAnalytics) {
        window.KPSAnalytics.track('assessment_completed', {
          totalQuestions: this.totalQuestions,
          recommendations: this.recommendations.length,
          hasLocation: !!this.config.cityData
        });
      }
    },

    renderRecommendations: function() {
      const grid = this.container.querySelector('[data-recommendations-grid]');
      if (!grid) return;

      const recommendationsHtml = this.recommendations.map(rec => `
        <div class="recommendation-card ${rec.priority}-priority">
          <div class="priority-badge ${rec.priority}">${rec.priority}</div>
          
          <div class="recommendation-header">
            <div class="recommendation-icon" style="background: ${rec.color}">
              <i class="${rec.icon}"></i>
            </div>
            <div>
              <h4 class="recommendation-title">${rec.name}</h4>
              <div class="recommendation-price">Starting at $${rec.basePrice}/month</div>
            </div>
          </div>
          
          <p class="recommendation-description">${rec.description}</p>
          
          <ul class="recommendation-features">
            <li>Personalized setup and training</li>
            <li>Ongoing support and maintenance</li>
            <li>Regular check-ins and optimization</li>
            ${rec.key === 'quickbooks' ? '<li>Data migration included</li>' : ''}
            ${rec.key === 'payroll' ? '<li>Tax filing and compliance</li>' : ''}
            ${rec.key === 'bookkeeping' ? '<li>Monthly financial reports</li>' : ''}
          </ul>
        </div>
      `).join('');

      grid.innerHTML = recommendationsHtml;
    },

    renderSummary: function() {
      const summary = this.container.querySelector('[data-results-summary]');
      if (!summary) return;

      const totalEstimate = this.recommendations.reduce((sum, rec) => sum + rec.basePrice, 0);
      const highPriorityCount = this.recommendations.filter(r => r.priority === 'high').length;

      const summaryHtml = `
        <div class="summary-stats">
          <div class="stat-item">
            <div class="stat-number">${this.recommendations.length}</div>
            <div class="stat-label">Services Recommended</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">${highPriorityCount}</div>
            <div class="stat-label">High Priority</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">$${totalEstimate.toLocaleString()}</div>
            <div class="stat-label">Monthly Investment</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">15-25%</div>
            <div class="stat-label">Potential Savings</div>
          </div>
        </div>
        
        <p style="color: #6b7280; line-height: 1.6; margin-top: 2rem;">
          Based on your responses, we've identified ${this.recommendations.length} key services that could 
          significantly improve your business operations. Our bundled packages can save you 15-25% 
          compared to individual services.
        </p>
      `;

      summary.innerHTML = summaryHtml;
    },

    showLoading: function() {
      const loading = this.container.querySelector('[data-assessment-loading]');
      if (loading) loading.style.display = 'flex';
    },

    hideLoading: function() {
      const loading = this.container.querySelector('[data-assessment-loading]');
      if (loading) loading.style.display = 'none';
    },

    scheduleConsultation: function() {
      window.open('/schedule-consultation?source=assessment', '_blank');
    },

    downloadReport: function() {
      // Generate and download PDF report
      this.generatePDFReport();
    },

    generatePDFReport: function() {
      const reportData = {
        answers: this.answers,
        recommendations: this.recommendations,
        cityData: this.config.cityData,
        timestamp: new Date().toISOString()
      };

      // Create download link
      const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'business-assessment-results.json';
      a.click();
      URL.revokeObjectURL(url);
    },

    startOver: function() {
      this.currentQuestionIndex = 0;
      this.answers = {};
      
      // Show form, hide results
      const form = this.container.querySelector('[data-assessment-form]');
      const results = this.container.querySelector('[data-assessment-results]');
      
      if (form) form.style.display = 'block';
      if (results) results.style.display = 'none';
      
      this.renderCurrentQuestion();
      this.updateProgress();
    }
  };

  // Auto-initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => window.KPSBusinessAssessment.init());
  } else {
    window.KPSBusinessAssessment.init();
  }
</script>
